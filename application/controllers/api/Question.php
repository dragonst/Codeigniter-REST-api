<?php

defined('BASEPATH') OR exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
/** @noinspection PhpIncludeInspection */
require APPPATH . '/libraries/REST_Controller.php';

/**
 * This is an example of a few basic user interaction methods you could use
 * all done with a hardcoded array
 *
 * @package         CodeIgniter
 * @subpackage      Rest Server
 * @category        Controller
 * @author          Phil Sturgeon, Chris Kacerguis
 * @license         MIT
 * @link            https://github.com/chriskacerguis/codeigniter-restserver
 */
class Question extends \Restserver\Libraries\REST_Controller {

  function __construct()
  {
      // Construct the parent class
      parent::__construct();

      $this->load->library('session');
      $this->load->model('question_model');
      $this->load->helper('url');
  }

  public function index_get($id = null, $page = null)
  {

    if ($id === NULL || $page === NULL)
    {
      // Set the response and exit
      $this->response([
          'status' => FALSE,
          'message' => 'No questions were found'
      ], \Restserver\Libraries\REST_Controller::HTTP_OK);


    }
    // Find and return a single record for a particular user.
    elseif ($id !== NULL && $page !== NULL) {


        $id = (int) $id;

        // Validate the id.
        if ($id <= 0)
        {
            // Invalid id, set the response and exit.
            $this->response(NULL, \Restserver\Libraries\REST_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
        }

        // Get the user from the array, using the id as key for retrieval.
        // Usually a model is to be used for this.
        $questions = $this->question_model->get_paginated($id, ($page*5) - 5, 5);


        if (!empty($questions))
        {
            $this->response($questions, \Restserver\Libraries\REST_Controller::HTTP_OK); // OK (200) being the HTTP response code
        }
        else
        {
            $this->set_response([
                'status' => FALSE,
                'message' => 'Questions not found'
            ], \Restserver\Libraries\REST_Controller::HTTP_OK); // NOT_FOUND (404) being the HTTP response code
        }
    }

  }

  public function index_post()
  {

    $arr = '';

    if($this->session->userdata("user_logged"))
    {

      $arr = $this->input->post('data');
      $arr['is_vendor'] = 1;
    }
    else
    {
      $arr = $this->input->post('data');
      $arr['is_vendor'] = 0;
    }

    $id = $this->question_model->insert($arr);

   $message = [
        'id' => $id, // Automatically generated by the model
        'product_id' => $arr['product_id'],
        'question' => $arr['question'],
        'is_vendor' => $arr['is_vendor']

    ];

    $this->set_response($message, \Restserver\Libraries\REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
  }
}
